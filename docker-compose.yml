services:
  db:
    image: postgres:15
    container_name: algodatta-db
    environment:
      POSTGRES_USER: algouser
      POSTGRES_PASSWORD: algopass
      POSTGRES_DB: algodatta
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/algodatta/pgdata:/var/lib/postgresql/data

  backend:
    healthcheck:
      test: [ "CMD-SHELL", "python -c 'import urllib.request,sys; sys.exit(0) if urllib.request.urlopen(\"http://127.0.0.1:8000/api/healthz\").status==200 else sys.exit(1)'" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: algodatta-backend
    environment:
      DATABASE_URL: postgresql+psycopg://algouser:algopass@db:5432/algodatta
      JWT_SECRET: super-secret-change-me
      CORS_ORIGINS: https://www.algodatta.com,https://algodatta.com,http://localhost:3000

      # --- Cognito Managed Login (Option A) ---
      OIDC_ISSUER: "https://cognito-idp.ap-south-1.amazonaws.com/ap-south-1_XZrRRDJ6d"
      OIDC_CLIENT_ID: "tdloi4m06lhijn0pj3l35899l"

      # --- Optional: role assignment ---
      DEFAULT_ROLE: "trader"
      ROLE_EMAIL_MAP: '{"admin":["admin@yourdomain.com"],"analyst":["analyst@yourdomain.com"],"trader":["trader@yourdomain.com"]}'
    depends_on:
      - db
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--proxy-headers", "--forwarded-allow-ips=*"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: algodatta-frontend
    environment:
      NEXT_PUBLIC_API_BASE: "https://api.algodatta.com"

      # --- Cognito OIDC bridge ---
      OIDC_CLIENT_ID: "tdloi4m06lhijn0pj3l35899l"
      OIDC_REDIRECT_URI: "https://www.algodatta.com/api/oidc/callback"
      COGNITO_DOMAIN: "https://ap-south-1xzrrrdj6d.auth.ap-south-1.amazoncognito.com"
      SESSION_COOKIE_DOMAIN: ".algodatta.com"
    depends_on:
      - backend
    ports:
      - "3000:3000"
