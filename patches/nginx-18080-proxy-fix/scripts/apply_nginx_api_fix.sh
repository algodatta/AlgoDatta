#!/usr/bin/env bash
set -euo pipefail

DOMAIN="${1:-api.algodatta.com}"
UPSTREAM_PORT="${2:-18080}"

echo "==> Target domain: ${DOMAIN}"
echo "==> Desired upstream port: ${UPSTREAM_PORT}"

# Find active nginx server block file for the domain
CONF_FILE="$(grep -Ril --include='*.conf' --include='*default*' --include='*nginx.conf' -E "server_name\s+${DOMAIN}" /etc/nginx 2>/dev/null | head -n1 || true)"
if [[ -z "${CONF_FILE}" ]]; then
  echo "!! Could not find a server block for ${DOMAIN} under /etc/nginx"
  echo "   Create one in /etc/nginx/sites-available/${DOMAIN}.conf and symlink to sites-enabled."
  exit 1
fi
echo "==> Using nginx config: ${CONF_FILE}"

# Backup once
BACKUP="${CONF_FILE}.bak.$(date +%Y%m%d%H%M%S)"
cp -a "${CONF_FILE}" "${BACKUP}"
echo "==> Backup saved: ${BACKUP}"

# Ensure an include for API upstream snippet exists (optional)
SNIPPET="/etc/nginx/api_upstream.conf"
if ! grep -qF "${SNIPPET}" "${CONF_FILE}"; then
  echo "==> Inserting include ${SNIPPET} in server block (if it exists)"
  # attempt to insert include inside the first server { } block
  awk -v snip="${SNIPPET}" '
    BEGIN{inserver=0}
    /server\s*\{/ {inserver=1}
    {print}
    inserver==1 && $0 ~ /{\s*$/ {print "    include " snip ";" ; inserver=2}
  ' "${CONF_FILE}" > "${CONF_FILE}.tmp" && mv "${CONF_FILE}.tmp" "${CONF_FILE}" || true
fi

# Write/overwrite the snippet to point to 127.0.0.1:UPSTREAM_PORT for / and /api
mkdir -p /etc/nginx
cat > "${SNIPPET}" <<EOF
# Autogenerated by apply_nginx_api_fix.sh
# Proxies API traffic to the FastAPI backend bound on localhost:${UPSTREAM_PORT}

location / {
    proxy_pass http://127.0.0.1:${UPSTREAM_PORT};
    proxy_set_header Host \$host;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_http_version 1.1;
    proxy_read_timeout 300s;
    proxy_connect_timeout 60s;
}

# Explicit API prefix (in case your frontend calls /api/...)
location /api/ {
    proxy_pass http://127.0.0.1:${UPSTREAM_PORT};
    proxy_set_header Host \$host;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_http_version 1.1;
    proxy_read_timeout 300s;
    proxy_connect_timeout 60s;
}
EOF

# Also fix any hard-coded proxy_pass to 127.0.0.1:8000 in the main file
if grep -q 'proxy_pass http://127\.0\.0\.1:8000' "${CONF_FILE}"; then
  echo "==> Replacing hardcoded proxy_pass 127.0.0.1:8000 -> 127.0.0.1:${UPSTREAM_PORT}"
  sed -i "s#proxy_pass http://127\.0\.0\.1:8000;#proxy_pass http://127.0.0.1:${UPSTREAM_PORT};#g" "${CONF_FILE}"
fi

echo "==> Testing nginx config"
nginx -t

echo "==> Reloading nginx"
systemctl reload nginx || service nginx reload || (nginx -s reload || true)

echo "==> Done. Try: curl -i https://${DOMAIN}/healthz"
